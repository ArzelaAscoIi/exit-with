[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "github-action-exit-with"
dynamic = ["version"]
description = 'A GitHub Action that exits with a message, link and additional information.'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Kristof", email = "kristof.herrmann@rwth-aachen.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pytest-cov==4.0.0",
  "pytest==7.4.0",
  "structlog==23.1.0",
  "httpx==0.24.1"
]

[project.urls]
Documentation = "https://github.com/unknown/github-action-exit-with#readme"
Issues = "https://github.com/unknown/github-action-exit-with/issues"
Source = "https://github.com/unknown/github-action-exit-with"

[tool.hatch.version]
path = "src/__about__.py"

[tool.hatch.envs.default.scripts]
tests-with-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src tests"

[[tool.hatch.envs.all.matrix]]
python = ["3.10"]

[tool.hatch.envs.code-quality]
detached = true
# Please keep these aligned with the versions defined in .pre-commit-config.yaml
dependencies = [
  "pylint==2.15.2",
  "pydocstyle==6.3.0",
  "black==23.3.0",
  "isort==5.12.0",
  "mypy==1.1.1",
  "pre-commit==2.20.0",
  "pytest-github-actions-annotate-failures==0.2.0",
  "ruff==0.0.269",
  "httpx==0.24.1"
]

[tool.hatch.envs.code-quality.scripts]
types = "mypy src tests"
format = "black src tests --check"
format-fix = "black src tests"
lint = "ruff . && pylint src"
lint-ci = "ruff --format=github . && pylint src"
hooks = "pre-commit install"
docstrings = "pydocstyle src"

[tool.hatch.envs.tools]
detached = true
# Please keep these aligned with the versions defined in .pre-commit-config.yaml
dependencies = [
  "pip-tools==6.13.0",
  "httpx==0.24.1"
]

[tool.hatch.envs.tools.scripts]
requirements = "pip-compile -o requirements.txt pyproject.toml"

[tool.coverage.run]
branch = true
relative_files = true
omit = [
  "src/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length = 120

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_incomplete_defs = true
disallow_untyped_defs = true

[tool.pylint.'MESSAGES CONTROL']
max-line-length=120
disable = [
  "fixme",
  "c-extension-no-member",
  "wrong-spelling-in-comment",
  "wrong-spelling-in-docstring",
  "missing-module-docstring"
  ]
[tool.pylint.'DESIGN']
max-args=7

[tool.pylint.'SIMILARITIES']
min-similarity-lines=6

[tool.pylint.'BASIC']
good-names=[
  "i",
  "k",
  "v",
  "_",
  "f1"
  ]

[tool.ruff]
line-length = 120
extend-select = [ # Full rule overview hear
  "E", # Pycodestyle
  "F", # Pycodestyle
  "S", # looks for common security issues using Bandit
  "A", # don't shadow built-ins
  "PTH", # enforces-pathlib usage
  "RUF", # Ruff-specific errors
  "DTZ", # flags datetime.timezone.now() usage
  "I", # replaces isort
  "B", # Bugbear
  "C90", # Code complexity
  "PL", # Pylint
]
ignore = [
  "A003", # it's okay class attributes shadow built-ins
  "S104", # It's okay to bind FastAPI to all interfaces
  "B008", # do not perform function calls in argument defaults (FastAPI, Pydantic rely on this)
  "B019", # We know about the risks of `functools.lru_cache` and `functools.cache`
  "PLR0913", # Too many arguments to function call
  "PLR0915", # Too many statements
  "PLC1901", # Nothing wrong with explicitly checking empty strings
]
[tool.ruff.per-file-ignores]
"tests/**" = [
  "S", # No need for security checks in tests
  "PTH", # tests can use pathlib
  "B", # Doesn't make sense for tests
  "PL", # Doesn't make sense for tests
]


[tool.ruff.isort]
combine-as-imports = true
